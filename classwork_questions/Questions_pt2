Q1) Q1.java
/* Poorab Jain & 24csu151 */
abstract class Shape {
    abstract double getArea();
}

class Rectangle extends Shape {
    double length, width;
    Rectangle(double l, double w) { length = l; width = w; }
    double getArea() { return length * width; }
}

class Circle extends Shape {
    double radius;
    Circle(double r) { radius = r; }
    double getArea() { return Math.PI * radius * radius; }
}

public class Q1 {
    public static void main(String[] args) {
        Shape s1 = new Rectangle(5, 3);
        Shape s2 = new Circle(4);
        System.out.println("Rectangle Area: " + s1.getArea());
        System.out.println("Circle Area: " + s2.getArea());
    }
}

Q2) EmployeeDemo.java
/* Poorab Jain  & 24csu151*/
abstract class Employee {
    String name; int id;
    Employee(String n, int i) { name = n; id = i; }
    abstract double calculateSalary();
}

class FullTimeEmployee extends Employee {
    double monthlySalary;
    FullTimeEmployee(String n, int i, double s) { super(n, i); monthlySalary = s; }
    double calculateSalary() { return monthlySalary; }
}

class PartTimeEmployee extends Employee {
    int hours; double rate;
    PartTimeEmployee(String n, int i, int h, double r) { super(n, i); hours = h; rate = r; }
    double calculateSalary() { return hours * rate; }
}

public class EmployeeDemo {
    public static void main(String[] args) {
        Employee e1 = new FullTimeEmployee("Aman", 101, 30000);
        Employee e2 = new PartTimeEmployee("Riya", 102, 40, 200);

        System.out.println(e1.name + " Salary: " + e1.calculateSalary());
        System.out.println(e2.name + " Salary: " + e2.calculateSalary());
    }
}

Q3) Q3.java
/* Poorab Jain & 24csu151*/
abstract class Animal { abstract void makeSound(); }

class Dog extends Animal { void makeSound() { System.out.println("Woof"); } }
class Cat extends Animal { void makeSound() { System.out.println("Meow"); } }
class Cow extends Animal { void makeSound() { System.out.println("Moo"); } }

public class Q3 {
    public static void main(String[] args) {
        Animal[] animals = { new Dog(), new Cat(), new Cow() };
        for (Animal a : animals) a.makeSound();
    }
}

Q4) BankDemo.java
/*Poorab Jain  & 24csu151*/
abstract class BankAccount {
    double balance;
    BankAccount(double bal) { balance = bal; }

    void deposit(double amt) { balance += amt; }  // same for all
    abstract void withdraw(double amt);           // different for each
}

class SavingsAccount extends BankAccount {
    SavingsAccount(double bal) { super(bal); }
    void withdraw(double amt) {
        if (balance >= amt) balance -= amt;
        else System.out.println("Not enough balance!");
    }
}

class CurrentAccount extends BankAccount {
    CurrentAccount(double bal) { super(bal); }
    void withdraw(double amt) {
        if (balance + 10000 >= amt) balance -= amt; // overdraft allowed
        else System.out.println("Overdraft limit exceeded!");
    }
}

public class BankDemo {
    public static void main(String[] args) {
        BankAccount s = new SavingsAccount(5000);
        BankAccount c = new CurrentAccount(2000);

        s.deposit(1000); s.withdraw(2000);
        c.deposit(5000); c.withdraw(12000);

        System.out.println("Savings Balance: " + s.balance);
        System.out.println("Current Balance: " + c.balance);
    }
}
	
